---
    - hosts: all
      become: true
      tasks:

      - name: Run apt-get update
        ansible.builtin.apt:
          update_cache: yes

      - name: Install packages that allow apt to be used over HTTPS
        ansible.builtin.apt:
          name: "{{ packages }}"
          state: present
          update_cache: yes
        vars:
          packages:
          - apt-transport-https
          - ca-certificates
          - curl
          - libassuan0
          - libnpth0
          - pinentry-curses
          - software-properties-common

      - name: Install gnupg agent via shell
        ansible.builtin.shell: >
          apt-get install gnupg-agent -y

      - name: Add an apt signing key for Docker
        apt_key:
          url: https://download.docker.com/linux/ubuntu/gpg
          state: present

      - name: Add apt repository for stable version
        apt_repository:
          repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
          state: present

      - name: Install docker and its dependecies
        ansible.builtin.apt:
          name: "{{ packages }}"
          state: present
          update_cache: yes
        vars:
          packages:
          - docker-ce=5:19.03.15~3-0~ubuntu-xenial
          - docker-ce-cli=5:19.03.15~3-0~ubuntu-xenial
          - containerd.io
        notify:
          - docker status

      - name: setup docker config
        copy:
          src: ../files/etc/docker/{{ item }}.j2
          dest: /etc/docker/{{ item }}
          owner: root
          group: root
          mode: 0644
        with_items:
          - daemon.json
        notify:
          - docker restart

      - name: flush handlers
        meta: flush_handlers

      - name: Add vagrant user to docker group
        user:
          name: vagrant
          group: docker

      - name: Remove swapfile from /etc/fstab
        mount:
            name: "{{ item }}"
            fstype: swap
            state: absent
        with_items:
            - swap
            - none

      - name: Disable swap
        command: swapoff -a
        when: ansible_swaptotal_mb > 0

      - name: Add an apt signing key for Kubernetes
        apt_key:
          url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
          state: present

      - name: Adding apt repository for Kubernetes
        apt_repository:
          repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
          state: present
          filename: kubernetes.list

      - name: Install Kubernetes binaries
        ansible.builtin.apt:
          name: "{{ packages }}"
          state: present
          update_cache: yes
        vars:
          packages:
            - kubelet
            - kubeadm
            - kubectl

      - name: Create kubelet file for extra args
        file:
          path: /etc/default/kubelet
          owner: root
          group: root
          mode: '0644'
          state: touch

      - name: Configure node ip
        lineinfile:
          path: /etc/default/kubelet
          line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}

      - name: Restart kubelet
        service:
          name: kubelet
          daemon_reload: yes
          state: restarted

      - name: Remove containerd config
        ansible.builtin.shell: >
          rm -rf /etc/containerd/config.toml
        ignore_errors: yes

      - name: Restart containerd
        service:
          name: containerd
          daemon_reload: yes
          state: restarted

      - name: Copy the join command to server location
        ansible.builtin.shell: "{{ item }}"
        with_items:
          - chmod 0777 /mnt/join-command.sh

      - name: Join the node to cluster
        register: result
        ansible.builtin.shell: sh /mnt/join-command.sh
        become: yes
        become_user: root
        failed_when:
          - '"" not in result.stderr'
          - '"already exists" not in result.stderr'
          - '"This node has joined the cluster" not in result.stdout'

      handlers:
          - name: docker status
            service: name=docker state=started

          - name: docker restart
            service: name=docker state=restarted
