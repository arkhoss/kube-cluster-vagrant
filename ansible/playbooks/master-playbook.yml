---
    - hosts: all
      become: true
      tasks:
      - name: Install packages that allow apt to be used over HTTPS
        apt:
          name: "{{ packages }}"
          state: present
          update_cache: yes
        vars:
          packages:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common

      - name: Add an apt signing key for Docker
        apt_key:
          url: https://download.docker.com/linux/ubuntu/gpg
          state: present

      - name: Add apt repository for stable version
        apt_repository:
          repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
          state: present

      - name: Install docker and its dependecies
        apt:
          name: "{{ packages }}"
          state: present
          update_cache: yes
        vars:
          packages:
          - docker-ce=5:19.03.15~3-0~ubuntu-xenial
          - docker-ce-cli=5:19.03.15~3-0~ubuntu-xenial
          - containerd.io
        notify:
          - docker status

      - name: setup docker config
        copy:
          src: ../files/etc/docker/{{ item }}.j2
          dest: /etc/docker/{{ item }}
          owner: root
          group: root
          mode: 0644
        with_items:
          - daemon.json
        notify:
          - docker restart

      - name: flush handlers
        meta: flush_handlers

      - name: Add vagrant user to docker group
        user:
          name: vagrant
          group: docker

      - name: Remove swapfile from /etc/fstab
        mount:
            name: "{{ item }}"
            fstype: swap
            state: absent
        with_items:
            - swap
            - none

      - name: Disable swap
        command: swapoff -a
        when: ansible_swaptotal_mb > 0

      - name: Add an apt signing key for Kubernetes
        apt_key:
          url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
          state: present

      - name: Adding apt repository for Kubernetes
        apt_repository:
          repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
          state: present
          filename: kubernetes.list

      - name: Install Kubernetes binaries
        apt:
          name: "{{ packages }}"
          state: present
          update_cache: yes
        vars:
          packages:
            - kubelet
            - kubeadm
            - kubectl

      - name: Create kubelet file for extra args
        file:
          path: /etc/default/kubelet
          owner: root
          group: root
          mode: '0644'
          state: touch

      - name: Configure node ip
        lineinfile:
          path: /etc/default/kubelet
          line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}

      - name: Restart kubelet
        service:
          name: kubelet
          daemon_reload: yes
          state: restarted

      - name: Initialize the Kubernetes cluster using kubeadm
        shell: kubeadm init --apiserver-advertise-address="192.200.0.10" --apiserver-cert-extra-sans="192.200.0.10"  --node-name k8s-master --pod-network-cidr="192.168.0.0/16"
        ignore_errors: yes

      - name: Setup kubeconfig for vagrant user
        command: "{{ item }}"
        with_items:
         - mkdir -p /home/vagrant/.kube
         - cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config
         - chown vagrant:vagrant /home/vagrant/.kube/config

      - name: Install calico pod network
        become: false
        shell: kubectl create -f /mnt/ansible/files/calico.yaml
        #if you want to use official calico manifest use line below
        # shell: kubectl create -f https://docs.projectcalico.org/v3.9/manifests/calico.yaml
        ignore_errors: yes

      - name: Generate join command
        shell: kubeadm token create --print-join-command > /mnt/join-command.sh
        register: join_command

      handlers:
          - name: docker status
            service: name=docker state=started

          - name: docker restart
            service: name=docker state=restarted

